unit UCMSView;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Menus, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.DBCtrls, Vcl.Mask, UClass, Data.DB, Data.Win.ADODB, UData;

type
  TformCMSView = class(TForm)
    mmCMSView: TMainMenu;
    mmClose: TMenuItem;
    llabelTitle: TLinkLabel;
    gboxInstallationDetails: TGroupBox;
    gboxAdminCredentials: TGroupBox;
    gboxOtherDetails: TGroupBox;
    gboxControls: TGroupBox;
    buttonUpdate: TButton;
    buttonDelete: TButton;
    lblInstallDirectory: TLabel;
    lblThemeName: TLabel;
    lblTablePrefix: TLabel;
    lblCMSType: TLabel;
    dbcomboCMSType: TDBLookupComboBox;
    dbeditThemeName: TDBEdit;
    dbeditInstallDirectory: TDBEdit;
    dbeditTablePrefix: TDBEdit;
    dbeditAdminUsername: TDBEdit;
    dbeditAdminPassword: TDBEdit;
    lblAdminUsername: TLabel;
    lblAdminPassword: TLabel;
    gboxClientCredentials: TGroupBox;
    lblClientUsername: TLabel;
    lblClientPassword: TLabel;
    dbeditClientUsername: TDBEdit;
    dbeditClientPassword: TDBEdit;
    lblDatabase: TLabel;
    lblHosting: TLabel;
    dbcomboHosting: TDBLookupComboBox;
    dbcomboDatabase: TDBLookupComboBox;
    datasetSingleCMS: TADODataSet;
    datasetCMSType: TADODataSet;
    datasetHosting: TADODataSet;
    datasetDatabase: TADODataSet;
    datasourceSingleCMS: TDataSource;
    datasourceCMSType: TDataSource;
    datasourceHosting: TDataSource;
    datasourceDatabase: TDataSource;
    lblSlash: TLabel;
    procedure dbcomboHostingClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure mmCloseClick(Sender: TObject);
    procedure buttonDeleteClick(Sender: TObject);
    procedure buttonUpdateClick(Sender: TObject);
  private
    hostingChanged: boolean;
  public
    CMS: TCMS;
    procedure doOpen(CMS: TCMS);
    procedure doUpdate(CMSID: integer);
  end;

var
  formCMSView: TformCMSView;

implementation

{$R *.dfm}

uses UMain;

procedure TformCMSView.doUpdate(CMSID: integer);
var
  NewCMS: TCMS;
begin
  // make new cms object
  NewCMS := TCMS.Create(CMSID, dbcomboCMSType.KeyValue,
    dbcomboHosting.KeyValue, dbcomboDatabase.KeyValue,
    dbeditInstallDirectory.Text, dbeditTablePrefix.Text, dbeditThemeName.Text,
    dbeditAdminUsername.Text, dbeditAdminPassword.Text,
    dbeditClientUsername.Text, dbeditClientPassword.Text);
  // push to db
  with datasetSingleCMS do
  begin
    Close;
    Parameters.ParamByName('cmid').Value := CMSID;
    Open;
    Edit;
    FieldValues['CMSTypeID'] := NewCMS.CMSTypeID;
    FieldValues['HostingID'] := NewCMS.HostingID;
    FieldValues['DatabaseID'] := NewCMS.DatabaseID;
    FieldValues['Directory'] := NewCMS.Directory;
    FieldValues['TablePrefix'] := NewCMS.TablePrefix;
    FieldValues['ThemeName'] := NewCMS.ThemeName;
    FieldValues['AdminUsername'] := NewCMS.AdminUsername;
    FieldValues['AdminPassword'] := Newcms.AdminPassword;
    FieldValues['ClientUsername'] := NewCMS.ClientUsername;
    FieldValues['ClientPassword'] := NewCms.ClientPassword;
    Post;
  end;
end;

procedure TformCMSView.buttonDeleteClick(Sender: TObject);
var
  butSelected, ProjectID: integer;
begin
  // show a messagebox confirming delete
  butSelected := MessageDlg('Are you sure you want to delete ' + '/' +
    CMS.Directory + '? This operation cannot be undone.', mtConfirmation,
    mbOKCancel, 0);
  case butSelected of
    mrOk:
      begin
        // get project id
        dbcomboHosting.ListSource := nil;
        with datasetHosting do
        begin
          Close;
          CommandText :=
            'SELECT `ProjectID` FROM `hosting` WHERE `HostingID` = ' +
            inttostr(CMS.HostingID);
          Open;
          ProjectID := FieldValues['ProjectID'];
        end;
        formmain.DeleteCMS(CMS.CMSID);
        formmain.RefreshProject(ProjectID);
        self.free;
      end;
    mrCancel:
      MessageDlg('CMS not deleted.', mtInformation, [mbOK], 0);
  end;
end;

procedure TformCMSView.buttonUpdateClick(Sender: TObject);
begin
  doUpdate(CMS.CMSID);
  self.Free;
end;

procedure TformCMSView.dbcomboHostingClick(Sender: TObject);
begin
  if (dbcomboHosting.KeyValue <> CMS.HostingID) or (hostingChanged) then
  begin
    with datasetDatabase do
    begin
      Close;
      Parameters.ParamByName('hid').Value := dbcomboHosting.KeyValue;
      Open;
    end;
    dbcomboDatabase.KeyValue := 0;
    hostingChanged := true;
  end;
end;

procedure TformCMSView.doOpen(CMS: TCMS);
begin
  // title lable
  llabelTitle.caption := '/' + CMS.Directory;
  // set parameters
  with datasetSingleCMS do
  begin
    Close;
    Parameters.ParamByName('cmid').Value := CMS.CMSID;
    Open;
  end;
  with datasetDatabase do
  begin
    Close;
    Parameters.ParamByName('hid').Value := CMS.HostingID;
    Open;
  end;
  // comboboxes
  dbcomboCMSType.KeyValue := CMS.CMSTypeID;
  dbcomboHosting.KeyValue := CMS.HostingID;
  dbcomboDatabase.KeyValue := CMS.DatabaseID;
end;

procedure TformCMSView.FormCreate(Sender: TObject);
begin
  hostingChanged := false;
end;

procedure TformCMSView.mmCloseClick(Sender: TObject);
begin
  self.free;
end;

end.
